labs(title=paste("EPM: Temps moyen passé en bras ouvert selon le genotype à differents ages"),
subtitle="Barres d'erreur: SEM",
x="Subject Genotype",
y=paste("Temps moyen passé en bras ouvert (s)"),
caption="Kourrich lab, WBR")
Graph04
SousDF_Temps_Zone_Bras_O_Selon_Genotype=Dataframe_raw %>%
select(Subject.Genotype,Subject.Name,Subject.Gender,Subject.Age ,Time.in.Zone..Seconds....bras.ouverts.tot)
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage=SousDF_Temps_Zone_Bras_O_Selon_Genotype %>%
mutate(Classe.Age= ifelse(Subject.Age<=1,"Juvenile",
ifelse(Subject.Age <=4,"Young Adult",
ifelse(Subject.Age<=10,"Adult",
ifelse(Subject.Age>10,"Aged","erreur"))))) %>% #Ajout d'une colonne classe d'age et definition des classes d'age selon l'age
relocate(Classe.Age,.after = Subject.Age) %>% #deplacement de la colonne classe.age apres Subject.Age (pour la lisibilité)
group_by(Subject.Genotype,Classe.Age,Subject.Gender) #on groupe par genotype puis par classe d'age
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_stats=SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage %>%
summarize(Moyenne.temps.bras.ouvert=mean(Time.in.Zone..Seconds....bras.ouverts.tot),
Sd.temps.bras.ouvert=sd(Time.in.Zone..Seconds....bras.ouverts.tot),
n.temps.bras.ouvert=n(),
SEM.temps.bras.ouvert=Sd.temps.bras.ouvert/sqrt(n.temps.bras.ouvert))
Graph04=ggplot(SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_stats,
aes(x=fct_relevel(Classe.Age,c("Juvenile","Young Adult","Adult","Aged")),y=Moyenne.temps.bras.ouvert,group=Subject.Genotype,
color=Subject.Genotype))+
geom_line(position="identity",
size=1.5)+
geom_errorbar(aes(x=Classe.Age,ymin=Moyenne.temps.bras.ouvert-SEM.temps.bras.ouvert,
ymax=Moyenne.temps.bras.ouvert+SEM.temps.bras.ouvert),width=0.1,size=0.6)+
geom_point(color="black")+
geom_point(data=SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage,
aes(x=Classe.Age,y=Time.in.Zone..Seconds....bras.ouverts.tot,color=Subject.Genotype),size=0.4)+
theme(axis.text.x=element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8))+
labs(title=paste("EPM: Temps moyen passé en bras ouvert selon le genotype à differents ages"),
subtitle="Barres d'erreur: SEM",
x="Subject Genotype",
y=paste("Temps moyen passé en bras ouvert (s)"),
caption="Kourrich lab, WBR")
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_stats
Graph09=Graph04+
facet_wrap(~Subject.Gender)
SousDF_Temps_Zone_Bras_O_Selon_Genotype_Female=SousDF_Temps_Zone_Bras_O_Selon_Genotype %>%
filter(Subject.Gender=="Female")
SousDF_Temps_Zone_Bras_O_Selon_Genotype_Male=SousDF_Temps_Zone_Bras_O_Selon_Genotype %>%
filter(Subject.Gender=="Male")
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_Female=SousDF_Temps_Zone_Bras_O_Selon_Genotype_Female %>%
mutate(Classe.Age= ifelse(Subject.Age<=1,"Juvenile",
ifelse(Subject.Age <=4,"Young Adult",
ifelse(Subject.Age<=10,"Adult",
ifelse(Subject.Age>10,"Aged","erreur"))))) %>% #Ajout d'une colonne classe d'age et definition des classes d'age selon l'age
relocate(Classe.Age,.after = Subject.Age) %>% #deplacement de la colonne classe.age apres Subject.Age (pour la lisibilité)
group_by(Subject.Genotype,Classe.Age) #on groupe par genotype puis par classe d'age
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_Male=SousDF_Temps_Zone_Bras_O_Selon_Genotype_Male %>%
mutate(Classe.Age= ifelse(Subject.Age<=1,"Juvenile",
ifelse(Subject.Age <=4,"Young Adult",
ifelse(Subject.Age<=10,"Adult",
ifelse(Subject.Age>10,"Aged","erreur"))))) %>% #Ajout d'une colonne classe d'age et definition des classes d'age selon l'age
relocate(Classe.Age,.after = Subject.Age) %>% #deplacement de la colonne classe.age apres Subject.Age (pour la lisibilité)
group_by(Subject.Genotype,Classe.Age) #on groupe par genotype puis par classe d'age
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_stats_Female=SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_Female %>%
summarize(Moyenne.temps.bras.ouvert=mean(Time.in.Zone..Seconds....bras.ouverts.tot),
Sd.temps.bras.ouvert=sd(Time.in.Zone..Seconds....bras.ouverts.tot),
n.temps.bras.ouvert=n(),
SEM.temps.bras.ouvert=Sd.temps.bras.ouvert/sqrt(n.temps.bras.ouvert))
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_stats_Male=SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_Male %>%
summarize(Moyenne.temps.bras.ouvert=mean(Time.in.Zone..Seconds....bras.ouverts.tot),
Sd.temps.bras.ouvert=sd(Time.in.Zone..Seconds....bras.ouverts.tot),
n.temps.bras.ouvert=n(),
SEM.temps.bras.ouvert=Sd.temps.bras.ouvert/sqrt(n.temps.bras.ouvert))
Graph09
SousDF_Temps_Zone_Bras_O_Selon_Genotype=Dataframe_raw %>%
select(Subject.Genotype,Subject.Name,Subject.Gender,Subject.Age ,Time.in.Zone..Seconds....bras.ouverts.tot)
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage=SousDF_Temps_Zone_Bras_O_Selon_Genotype %>%
mutate(Classe.Age= ifelse(Subject.Age<=1,"Juvenile",
ifelse(Subject.Age <=4,"Young Adult",
ifelse(Subject.Age<=10,"Adult",
ifelse(Subject.Age>10,"Aged","erreur"))))) %>% #Ajout d'une colonne classe d'age et definition des classes d'age selon l'age
relocate(Classe.Age,.after = Subject.Age) %>% #deplacement de la colonne classe.age apres Subject.Age (pour la lisibilité)
group_by(Subject.Genotype,Classe.Age) #on groupe par genotype puis par classe d'age
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_stats=SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage %>%
summarize(Moyenne.temps.bras.ouvert=mean(Time.in.Zone..Seconds....bras.ouverts.tot),
Sd.temps.bras.ouvert=sd(Time.in.Zone..Seconds....bras.ouverts.tot),
n.temps.bras.ouvert=n(),
SEM.temps.bras.ouvert=Sd.temps.bras.ouvert/sqrt(n.temps.bras.ouvert))
Graph04=ggplot(SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_stats,
aes(x=fct_relevel(Classe.Age,c("Juvenile","Young Adult","Adult","Aged")),y=Moyenne.temps.bras.ouvert,group=Subject.Genotype,
color=Subject.Genotype))+
geom_line(position="identity",
size=1.5)+
geom_errorbar(aes(x=Classe.Age,ymin=Moyenne.temps.bras.ouvert-SEM.temps.bras.ouvert,
ymax=Moyenne.temps.bras.ouvert+SEM.temps.bras.ouvert),width=0.1,size=0.6)+
geom_point(color="black")+
geom_point(data=SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage,
aes(x=Classe.Age,y=Time.in.Zone..Seconds....bras.ouverts.tot,color=Subject.Genotype),size=0.4)+
theme(axis.text.x=element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8))+
labs(title=paste("EPM: Temps moyen passé en bras ouvert selon le genotype à differents ages"),
subtitle="Barres d'erreur: SEM",
x="Subject Genotype",
y=paste("Temps moyen passé en bras ouvert (s)"),
caption="Kourrich lab, WBR")
Graph04
SousDF_Temps_Zone_Bras_O_Selon_Genotype=Dataframe_raw %>%
select(Subject.Genotype,Subject.Name,Subject.Gender,Subject.Age ,Time.in.Zone..Seconds....bras.ouverts.tot)
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre=SousDF_Temps_Zone_Bras_O_Selon_Genotype %>%
mutate(Classe.Age= ifelse(Subject.Age<=1,"Juvenile",
ifelse(Subject.Age <=4,"Young Adult",
ifelse(Subject.Age<=10,"Adult",
ifelse(Subject.Age>10,"Aged","erreur"))))) %>% #Ajout d'une colonne classe d'age et definition des classes d'age selon l'age
relocate(Classe.Age,.after = Subject.Age) %>% #deplacement de la colonne classe.age apres Subject.Age (pour la lisibilité)
group_by(Subject.Genotype,Classe.Age,Subject.Gender) #on groupe par genotype puis par classe d'age
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre_stats=SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre %>%
summarize(Moyenne.temps.bras.ouvert=mean(Time.in.Zone..Seconds....bras.ouverts.tot),
Sd.temps.bras.ouvert=sd(Time.in.Zone..Seconds....bras.ouverts.tot),
n.temps.bras.ouvert=n(),
SEM.temps.bras.ouvert=Sd.temps.bras.ouvert/sqrt(n.temps.bras.ouvert))
Graph11=ggplot(SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre_stats,
aes(x=fct_relevel(Classe.Age,c("Juvenile","Young Adult","Adult","Aged")),y=Moyenne.temps.bras.ouvert,group=Subject.Genotype,
color=Subject.Genotype))+
geom_line(position="identity",
size=1.5)+
geom_errorbar(aes(x=Classe.Age,ymin=Moyenne.temps.bras.ouvert-SEM.temps.bras.ouvert,
ymax=Moyenne.temps.bras.ouvert+SEM.temps.bras.ouvert),width=0.1,size=0.6)+
geom_point(color="black")+
geom_point(data=SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre,
aes(x=Classe.Age,y=Time.in.Zone..Seconds....bras.ouverts.tot,color=Subject.Genotype),size=0.4)+
theme(axis.text.x=element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8))+
labs(title=paste("EPM: Temps moyen passé en bras ouvert selon le genotype à differents ages"),
subtitle="Barres d'erreur: SEM",
x="Subject Genotype",
y=paste("Temps moyen passé en bras ouvert (s)"),
caption="Kourrich lab, WBR")
Graph11
ousDF_Temps_Zone_Bras_O_Selon_Genotype=Dataframe_raw %>%
select(Subject.Genotype,Subject.Name,Subject.Gender,Subject.Age ,Time.in.Zone..Seconds....bras.ouverts.tot)
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre=SousDF_Temps_Zone_Bras_O_Selon_Genotype %>%
mutate(Classe.Age= ifelse(Subject.Age<=1,"Juvenile",
ifelse(Subject.Age <=4,"Young Adult",
ifelse(Subject.Age<=10,"Adult",
ifelse(Subject.Age>10,"Aged","erreur"))))) %>% #Ajout d'une colonne classe d'age et definition des classes d'age selon l'age
relocate(Classe.Age,.after = Subject.Age) %>% #deplacement de la colonne classe.age apres Subject.Age (pour la lisibilité)
group_by(Subject.Genotype,Classe.Age,Subject.Gender) #on groupe par genotype puis par classe d'age
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre_stats=SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre %>%
summarize(Moyenne.temps.bras.ouvert=mean(Time.in.Zone..Seconds....bras.ouverts.tot),
Sd.temps.bras.ouvert=sd(Time.in.Zone..Seconds....bras.ouverts.tot),
n.temps.bras.ouvert=n(),
SEM.temps.bras.ouvert=Sd.temps.bras.ouvert/sqrt(n.temps.bras.ouvert))
Graph11=ggplot(SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre_stats,
aes(x=fct_relevel(Classe.Age,c("Juvenile","Young Adult","Adult","Aged")),y=Moyenne.temps.bras.ouvert,group=Subject.Genotype,
color=Subject.Genotype))+
geom_line(position="identity",
size=1.5)+
geom_errorbar(aes(x=Classe.Age,ymin=Moyenne.temps.bras.ouvert-SEM.temps.bras.ouvert,
ymax=Moyenne.temps.bras.ouvert+SEM.temps.bras.ouvert),width=0.1,size=0.6)+
geom_point(color="black")+
geom_point(data=SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre,
aes(x=Classe.Age,y=Time.in.Zone..Seconds....bras.ouverts.tot,color=Subject.Genotype),size=0.4)+
theme(axis.text.x=element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8))+
facet_wrap(~Subject.Gender)
labs(title=paste("EPM: Temps moyen passé en bras ouvert selon le genotype à differents ages"),
subtitle="Barres d'erreur: SEM",
x="Subject Genotype",
y=paste("Temps moyen passé en bras ouvert (s)"),
caption="Kourrich lab, WBR")
Graph11
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
SousDF_Temps_Zone_Bras_O_Selon_Genotype_genre=Dataframe_raw %>%
select(Subject.Genotype,Subject.Name,Subject.Gender,Subject.Age ,Time.in.Zone..Seconds....bras.ouverts.tot)
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre=SousDF_Temps_Zone_Bras_O_Selon_Genotype %>%
mutate(Classe.Age= ifelse(Subject.Age<=1,"Juvenile",
ifelse(Subject.Age <=4,"Young Adult",
ifelse(Subject.Age<=10,"Adult",
ifelse(Subject.Age>10,"Aged","erreur"))))) %>% #Ajout d'une colonne classe d'age et definition des classes d'age selon l'age
relocate(Classe.Age,.after = Subject.Age) %>% #deplacement de la colonne classe.age apres Subject.Age (pour la lisibilité)
group_by(Subject.Genotype,Classe.Age,Subject.Gender) #on groupe par genotype puis par classe d'age
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre_stats=SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre %>%
summarize(Moyenne.temps.bras.ouvert=mean(Time.in.Zone..Seconds....bras.ouverts.tot),
Sd.temps.bras.ouvert=sd(Time.in.Zone..Seconds....bras.ouverts.tot),
n.temps.bras.ouvert=n(),
SEM.temps.bras.ouvert=Sd.temps.bras.ouvert/sqrt(n.temps.bras.ouvert))
Graph09=ggplot(SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre_stats,
aes(x=fct_relevel(Classe.Age,c("Juvenile","Young Adult","Adult","Aged")),y=Moyenne.temps.bras.ouvert,group=Subject.Genotype,
color=Subject.Genotype))+
geom_line(position="identity",
size=1.5)+
geom_errorbar(aes(x=Classe.Age,ymin=Moyenne.temps.bras.ouvert-SEM.temps.bras.ouvert,
ymax=Moyenne.temps.bras.ouvert+SEM.temps.bras.ouvert),width=0.1,size=0.6)+
geom_point(color="black")+
geom_point(data=SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre,
aes(x=Classe.Age,y=Time.in.Zone..Seconds....bras.ouverts.tot,color=Subject.Genotype),size=0.4)+
theme(axis.text.x=element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8))+
facet_wrap(~Subject.Gender)
labs(title=paste("EPM: Temps moyen passé en bras ouvert selon le genotype à differents ages"),
subtitle="Barres d'erreur: SEM",
x="Subject Genotype",
y=paste("Temps moyen passé en bras ouvert (s)"),
caption="Kourrich lab, WBR")
#Pour export:affecter aux dataframes crées pour faire le graph 1 la classe "Df.Graph9"
comment(SousDF_Temps_Zone_Bras_O_Selon_Genotype_genre)=append(comment(SousDF_Temps_Zone_Bras_O_Selon_Genotype_genre),"Df.Graph09")
comment(SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre)=append(comment(SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre),"Df.Graph09")
comment(SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre_stats)=append(comment(SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre_stats),"Df.Graph09")
Graph09
SousDF_Temps_Zone_Bras_O_Selon_Genotype_genre=Dataframe_raw %>%
select(Subject.Genotype,Subject.Name,Subject.Gender,Subject.Age ,Time.in.Zone..Seconds....bras.ouverts.tot)
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre=SousDF_Temps_Zone_Bras_O_Selon_Genotype %>%
mutate(Classe.Age= ifelse(Subject.Age<=1,"Juvenile",
ifelse(Subject.Age <=4,"Young Adult",
ifelse(Subject.Age<=10,"Adult",
ifelse(Subject.Age>10,"Aged","erreur"))))) %>% #Ajout d'une colonne classe d'age et definition des classes d'age selon l'age
relocate(Classe.Age,.after = Subject.Age) %>% #deplacement de la colonne classe.age apres Subject.Age (pour la lisibilité)
group_by(Subject.Genotype,Classe.Age,Subject.Gender) #on groupe par genotype puis par classe d'age
SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre_stats=SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre %>%
summarize(Moyenne.temps.bras.ouvert=mean(Time.in.Zone..Seconds....bras.ouverts.tot),
Sd.temps.bras.ouvert=sd(Time.in.Zone..Seconds....bras.ouverts.tot),
n.temps.bras.ouvert=n(),
SEM.temps.bras.ouvert=Sd.temps.bras.ouvert/sqrt(n.temps.bras.ouvert))
Graph09=ggplot(SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre_stats,
aes(x=fct_relevel(Classe.Age,c("Juvenile","Young Adult","Adult","Aged")),y=Moyenne.temps.bras.ouvert,group=Subject.Genotype,
color=Subject.Genotype))+
geom_line(position="identity",
size=1.5)+
geom_errorbar(aes(x=Classe.Age,ymin=Moyenne.temps.bras.ouvert-SEM.temps.bras.ouvert,
ymax=Moyenne.temps.bras.ouvert+SEM.temps.bras.ouvert),width=0.1,size=0.6)+
geom_point(color="black")+
geom_point(data=SousDF_Temps_Zone_Bras_O_Selon_Genotype_classeage_genre,
aes(x=Classe.Age,y=Time.in.Zone..Seconds....bras.ouverts.tot,color=Subject.Genotype),size=0.4)+
theme(axis.text.x=element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8))+
facet_wrap(~Subject.Gender)+
labs(title=paste("EPM: Temps moyen passé en bras ouvert selon le genotype à differents ages"),
subtitle="Barres d'erreur: SEM",
x="Subject Genotype",
y=paste("Temps moyen passé en bras ouvert (s)"),
caption="Kourrich lab, WBR")
Graph09
SousDF_nbentrees_Zone_Bras_O_Selon_Genotype=Dataframe_raw %>%
select(Subject.Genotype,Subject.Name,Subject.Gender,Subject.Age,Entries.in.Zone...bras.ouverts.tot)
SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_classeage=SousDF_nbentrees_Zone_Bras_O_Selon_Genotype %>%
mutate(Classe.Age= ifelse(Subject.Age<=1,"Juvenile",
ifelse(Subject.Age <=4,"Young Adult",
ifelse(Subject.Age<=10,"Adult",
ifelse(Subject.Age>10,"Aged","erreur"))))) %>% #Ajout d'une colonne classe d'age et definition des classes d'age selon l'age
relocate(Classe.Age,.after = Subject.Age) %>% #deplacement de la colonne classe.age apres Subject.Age (pour la lisibilité)
group_by(Subject.Genotype,Classe.Age,Subject.Gender) #on groupe par genotype puis par classe d'age
SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_classeage_stats=SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_classeage %>%
summarize(Moyenne.nentrees.bras.ouvert=mean(Entries.in.Zone...bras.ouverts.tot),
Sd.nentrees.bras.ouvert=sd(Entries.in.Zone...bras.ouverts.tot),
n.nentrees.bras.ouvert=n(),
SEM.nentrees.bras.ouvert=Sd.nentrees.bras.ouvert/sqrt(n.nentrees.bras.ouvert))
Graph11=ggplot(SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_classeage_stats,
aes(x=fct_relevel(Classe.Age,c("Juvenile","Young Adult","Adult","Aged")),y=Moyenne.nentrees.bras.ouvert,
group=Subject.Genotype,
color=Subject.Genotype))+
geom_line(position="identity",size=1.5)+
geom_errorbar(aes(x=Classe.Age,ymin=Moyenne.nentrees.bras.ouvert-SEM.nentrees.bras.ouvert,
ymax=Moyenne.nentrees.bras.ouvert+SEM.nentrees.bras.ouvert),width=0.1,size=0.6)+
geom_point(color="black")+
geom_point(data=SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_classeage,
aes(x=Classe.Age,y=Entries.in.Zone...bras.ouverts.tot,color=Subject.Genotype),size=0.4)+
facet_wrap(~Subject.Gender)+
theme(axis.text.x=element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8))+
labs(title=paste("EPM: Nombre d'entrées en bras ouverts selon le genotype à differents ages"),
subtitle="Barres d'erreur: SEM",
x="Subject Genotype",
y=paste("Nombre d'entrées en bras ouvert"),
caption="Kourrich lab, WBR")
Graph05
Graph11
SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_genre=Dataframe_raw %>%
select(Subject.Genotype,Subject.Name,Subject.Gender,Subject.Age,Entries.in.Zone...bras.ouverts.tot)
SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_classeage_genre=SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_genre %>%
mutate(Classe.Age= ifelse(Subject.Age<=1,"Juvenile",
ifelse(Subject.Age <=4,"Young Adult",
ifelse(Subject.Age<=10,"Adult",
ifelse(Subject.Age>10,"Aged","erreur"))))) %>% #Ajout d'une colonne classe d'age et definition des classes d'age selon l'age
relocate(Classe.Age,.after = Subject.Age) %>% #deplacement de la colonne classe.age apres Subject.Age (pour la lisibilité)
group_by(Subject.Genotype,Classe.Age,Subject.Gender) #on groupe par genotype puis par classe d'age
SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_classeage_genre_stats=SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_classeage_genre %>%
summarize(Moyenne.nentrees.bras.ouvert=mean(Entries.in.Zone...bras.ouverts.tot),
Sd.nentrees.bras.ouvert=sd(Entries.in.Zone...bras.ouverts.tot),
n.nentrees.bras.ouvert=n(),
SEM.nentrees.bras.ouvert=Sd.nentrees.bras.ouvert/sqrt(n.nentrees.bras.ouvert))
Graph11=ggplot(SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_classeage_genre_stats,
aes(x=fct_relevel(Classe.Age,c("Juvenile","Young Adult","Adult","Aged")),y=Moyenne.nentrees.bras.ouvert,
group=Subject.Genotype,
color=Subject.Genotype))+
geom_line(position="identity",size=1.5)+
geom_errorbar(aes(x=Classe.Age,ymin=Moyenne.nentrees.bras.ouvert-SEM.nentrees.bras.ouvert,
ymax=Moyenne.nentrees.bras.ouvert+SEM.nentrees.bras.ouvert),width=0.1,size=0.6)+
geom_point(color="black")+
geom_point(data=SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_classeage_genre,
aes(x=Classe.Age,y=Entries.in.Zone...bras.ouverts.tot,color=Subject.Genotype),size=0.4)+
facet_wrap(~Subject.Gender)+
theme(axis.text.x=element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8))+
labs(title=paste("EPM: Nombre d'entrées en bras ouverts selon le genotype à differents ages"),
subtitle="Barres d'erreur: SEM",
x="Subject Genotype",
y=paste("Nombre d'entrées en bras ouvert"),
caption="Kourrich lab, WBR")
#Pour export:affecter aux dataframes crées pour faire le graph 1 la classe "Df.Graph5"
comment(SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_genre)=append(comment(SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_genre),"Df.Graph11")
comment(SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_classeage_genre)=append(comment(SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_classeage_genre),"Df.Graph11")
comment(SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_classeage_genre_stats)=append(comment(SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_classeage_genre_stats),"Df.Graph11")
Graph11
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
gsub(".","\n","toto.toto")
gsub("f","\n","totoftoto")
str_replace_all("toto.toto",".","\n")
str_replace_all("totoftoto","f","\n")
gsub('[.]', 'f', "toto.toto")
gsub('[.]', '\n', "toto.toto")
help(colnames)
colnames(SousDF_nbentrees_Zone_Bras_O_Selon_Genotype_classeage_genre_stats)
gsub('[.]', '\n', colnames(get(w)))
help("kable")
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
help(kable_styling)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
for (i in liste_graphs){
#Besoin de "results= asis" et print() pour afficher les kable dans une for loop, cf Rmarkdown cookbook 10.1
#asis permet d'utiliser due LATex dans le code chunk
print(get(i)) #Selectionne le graph i dans la liste des graphs et l'affiche
tag=paste("Df.",i,sep="") #definit un tag selon i
liste_des_tables_degraphi=list.tables.comment(liste_tables,tag) #retourne une liste des tables associée au Graphi (via tag)
pos=grep("_stats",liste_des_tables_degraphi,ignore.case=TRUE) # retourne la position de la table stat dans la liste des tables du graph i retournée
table_stats_selection=liste_des_tables_degraphi[pos] #creation d'une liste des tables stats associées au Graphi (via tag)
#gsub('[.]', '\n', colnames(get(w))) #remplace tous les "." par des "\n"
#linebreak(gsub('[.]', '\n', colnames(get(w))))
for (w in table_stats_selection){
f=knitr::kable(get(w),#Recupere la table stat dans la liste des tables du graph i
booktabs=T,longtable=T,escape=F,
align = "c", digits=2,
col.names=linebreak(c(gsub('[.]', '\n', colnames(get(w)))),align="c"),
label=match(i,table_stats_selection)+(match(w,table_stats_selection)/100),
caption=knitr:::escape_latex(paste(i,"-", w, sep=" "))) %>% #Il y a un conflit entre le nom de la table (contient des underscore), et la reconaissance du texte avec le language latex, la fonction knitr:::escape_latex permet de resoudre la gestion de caracteres reservés a latex contenu dans du texte
kable_styling(latex_options = c("striped","repeat_header"),
repeat_header_text = "(suite)",
position="center",
font_size = 8)
print(f)
}
#   print(
# knitr::kable(
# get(table_selection), #Recupere la table stat dans la liste des tables du graph i
# booktabs=T,longtable=T,
# align = "c", digits=2,
# label=i,#label est utile ici car chaque codechunk à un label, par defaut celui de la table est celui du codechunk, mais dans une for loop pose pb
# caption=knitr:::escape_latex(paste("Graph",i,"-", table_selection, sep=" ")), #Il y a un conflit entre le nom de la table (contient des underscore), et la reconaissance du texte avec le language latex, la fonction knitr:::escape_latex permet de resoudre la gestion de caracteres reservés a latex contenu dans du texte
# ) %>%
#   kable_styling(latex_options = c("striped","repeat_header"),
#                 repeat_header_text = "(suite)",
#                 position="center",
#                 font_size = 7)
# #kable_styling(latex_options = c("striped", "scale_down"))
#   #PB longtable cannot be resized, il faut manuelement redimensionner la police (cf auteur du package)
# )
cat('\\pagebreak') #concatene et print une ligne de code ici en Latex afin de creer un saut de page
}
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
help("cat")
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.8/Src/Packages_reset.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
renv::restore()
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
warnings()
Dataframe_raw
View(Dataframe_raw)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Aide_gestion_packages.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Aide_gestion_packages.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
warnings()
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Test_ElevatedPlusMaze.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
warnings()
SousDF_Distance_tot_selon_groupe=Dataframe_raw %>%
select(Subject.Genotype,Subject.Name,Subject.Gender,Total.Distance) %>%
group_by(Subject.Genotype)
SousDF_Distance_tot_selon_groupe_stats=SousDF_Distance_tot_selon_groupe %>%
summarise(Distance.totale.moyenne=mean(Total.Distance),
sd.Total.Distance=sd(Total.Distance),
n.Total.Distance=n()) %>%
mutate(SEM.Distance.totale=sd.Total.Distance/sqrt(n.Total.Distance))
Graph01=ggplot(data=SousDF_Distance_tot_selon_groupe_stats,
aes(x=fct_relevel(Subject.Genotype,c("WT")),y=Distance.totale.moyenne,fill=Subject.Genotype))+
#fct relevel (librairie forcats) permet de reordonner les facteurs, ici pour mettre WT en 1er, la suite est ordonnée automatiquement
geom_bar(stat="identity",
width=0.4,color="black",size=0.8) + #stat=identity permet de representer les obseravation pour y, plutot que de sommer de les sommer
geom_errorbar(aes(x=Subject.Genotype,ymin=Distance.totale.moyenne-SEM.Distance.totale,
ymax=Distance.totale.moyenne+SEM.Distance.totale),
width=0.1,size=0.8)+
geom_point(data=SousDF_Distance_tot_selon_groupe,
aes(x=Subject.Genotype,y=Total.Distance),
color="black",size=1.5)+
theme(axis.text.x=element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
#scale_x_discrete(limits = c("WT","KO"))+
labs(title=paste("EPM: Distance totale moyenne parcourue selon le genoptype"),
subtitle="Barres d'erreur: SEM",
x="Subject Genotype",
y=paste("Mean Total Distance","(cm)"),
caption="Kourrich lab, WBR")
Graph1
Graph01
View(SousDF_Distance_tot_selon_groupe)
view(Dataframe_raw)
Dataframe_raw=Dataframe_raw %>%
mutate(Classe.Age= ifelse(Subject.Age<=1,"Juvenile",
ifelse(Subject.Age <=4,"Young Adult",
ifelse(Subject.Age<=10,"Adult",
ifelse(Subject.Age>10,"Aged","erreur"))))) %>% #Ajout d'une colonne classe d'age et definition des classes d'age selon l'age
relocate(Classe.Age,.after = Subject.Age) %>% #deplacement de la colonne classe.age apres Subject.Age (pour la lisibilité)
Dataframe_raw=Dataframe_raw %>%
mutate(Classe.Age= ifelse(Subject.Age<=1,"Juvenile",
ifelse(Subject.Age <=4,"Young Adult",
ifelse(Subject.Age<=10,"Adult",
ifelse(Subject.Age>10,"Aged","erreur"))))) %>% #Ajout d'une colonne classe d'age et definition des classes d'age selon l'age
relocate(Classe.Age,.after = Subject.Age) #deplacement de la colonne classe.age apres Subject.Age (pour la lisibilité)
view(Dataframe_raw)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
warnings()
View(Dataframe_raw)
between(3,left =3 ,right =6 )
between(6,left =3 ,right =6 )
between(7,left =3 ,right =6 )
between(5,left =3 ,right =6 )
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
warnings()
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
View(Dataframe_raw)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
View(Dataframe_raw)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
warnings
warnings()
View(Dataframe_raw)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
View(Dataframe_raw)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
View(Dataframe_raw)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
warnings()
View(Dataframe_raw)
Dataframe_raw$Total.Distance
typeof(Dataframe_raw$Total.Distance)
class(Dataframe_raw$Total.Distance)
class(Dataframe_raw$Total.Distance[1])
typeof(Dataframe_raw$Total.Distance[1])
Dataframe_raw$Total.Distance[1]
Dataframe_raw$Total.Distance[1]*3
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
Dataframe_raw$Total.Distance[1]
class(Dataframe_raw$Total.Distance[1])
typeof(Dataframe_raw$Total.Distance[1])
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9/Src/Packages_reset.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9.9/Src/Analyser.R", echo=TRUE)
renv::restore()
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9.9/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9.9/Src/Packages_reset.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9.9/Src/Analyser.R", echo=TRUE)
renv::restore()
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9.9/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9.9/Src/Analyser.R", echo=TRUE)
View(Exps_mastertable)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9.9/Src/Analyser.R", echo=TRUE)
View(Exps_mastertable)
File_name
name
fichier
name
basename(fichier)
hrlp(file_path_sans_ext)
name=tools::file_path_sans_ext(basename(fichier))
tools::file_path_sans_ext(basename(fichier))
basename(fichier)
File_name
print(paste("Analyse du fichier",basename(fichier) ,"terminée. Rapport PDF et fichiers générés"))
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9.9/Src/Analyser.R", echo=TRUE)
renv::restore()
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9.9/Src/Packages_reset.R", echo=TRUE)
renv::restore()
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9.9/Src/Analyser.R", echo=TRUE)
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9.9/Src/Analyser.R")
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9.9/Src/Analyser.R")
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.0.9.9.9/Src/Packages_reset.R")
renv::restore()
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.1.0/Src/Analyser.R")
source("C:/Users/iWiss/Desktop/tests/Projet_Automatisation_Analyse_R V.1.0/Src/Packages_reset.R")
